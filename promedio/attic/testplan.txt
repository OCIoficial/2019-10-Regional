# This is a sample test plan.
# Every line specifies a command to generate a test case.
# The first column specifies a group name.
# The second column specifies a command to generate the test case, it could be
# either a `copy` command or a generator with its respective arguments.
# A `copy` command expects a path to a file relatively to the task root.
# A generator could be a source file in Java, C++ or Python, which is compiled
# and executed with the specified arguments.
# Additionally, an argument which is different for every test case, is passed
# at the beginning. Arguments should be used to generate a uniquely random seed
# inside the generator.
# To generate test cases using test plan use `ocimatic gen-input`


[Subtask 1]
  # Use sample data as test
  1 ; copy statement/sample-1.in
  1 ; copy statement/sample-2.in
  1 ; copy statement/sample-3.in

  # Random tests
  2 ; generate.cpp 0 10
  2 ; generate.cpp 0 20
  2 ; generate.cpp 0 50
  2 ; generate.cpp 0 100
  2 ; generate.cpp 0 250
  2 ; generate.cpp 0 250
  2 ; generate.cpp 0 250
  2 ; generate.cpp 0 250
  2 ; generate.cpp 0 250


[Subtask 2]
  # Random tests
  3 ; generate.cpp 0 10
  3 ; generate.cpp 0 20
  3 ; generate.cpp 0 50
  3 ; generate.cpp 0 100
  3 ; generate.cpp 0 500
  3 ; generate.cpp 0 5000
  3 ; generate.cpp 0 5000
  3 ; generate.cpp 0 5000
  3 ; generate.cpp 0 5000
  3 ; generate.cpp 0 5000
  3 ; generate.cpp 0 5000
  3 ; generate.cpp 0 5000
  3 ; generate.cpp 0 5000
  3 ; generate.cpp 0 5000
  3 ; generate.cpp 0 5000
  3 ; generate.cpp 0 5000
  3 ; generate.cpp 0 5000
  3 ; generate.cpp 0 5000
  3 ; generateNoSol.cpp 0 5000
  3 ; generateNoSol.cpp 0 5000
  3 ; generateNoSol.cpp 0 5000
  3 ; generateNoSol.cpp 0 5000
  3 ; generateNoSol.cpp 0 5000
  3 ; generateNoSol.cpp 0 5000

[Subtask 3]
  # Random tests
  4 ; generate.cpp 1 10
  4 ; generate.cpp 1 20
  4 ; generate.cpp 1 50
  4 ; generate.cpp 1 100
  4 ; generate.cpp 1 1000
  4 ; generate.cpp 1 100000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generate.cpp 1 1000000
  4 ; generateNoSol.cpp 0 1000000
  4 ; generateNoSol.cpp 0 1000000
  4 ; generateNoSol.cpp 0 1000000
  4 ; generateNoSol.cpp 0 1000000
  4 ; generateNoSol.cpp 0 1000000
  4 ; generateNoSol.cpp 0 1000000
  4 ; generateNoSol.cpp 0 1000000


[Subtask 4]
  # Random tests
  5 ; generate.cpp 0 10
  5 ; generate.cpp 0 20
  5 ; generate.cpp 0 50
  5 ; generate.cpp 0 100
  5 ; generate.cpp 0 1000
  5 ; generate.cpp 0 10000
  5 ; generate.cpp 0 100000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generate.cpp 0 1000000
  5 ; generateNoSol.cpp 0 1000000
  5 ; generateNoSol.cpp 0 1000000
  5 ; generateNoSol.cpp 0 1000000
  5 ; generateNoSol.cpp 0 1000000
  5 ; generateNoSol.cpp 0 1000000
  5 ; generateNoSol.cpp 0 1000000
  5 ; generateNoSol.cpp 0 1000000
  5 ; generateNoSol.cpp 0 1000000
